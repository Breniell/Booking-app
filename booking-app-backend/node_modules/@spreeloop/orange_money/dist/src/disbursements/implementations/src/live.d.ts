import { TransferRequest, TransferResponse } from '../../operations/transfer';
import { CreateAccessTokenResponse } from '../../operations/create_access_token';
import { Routes } from '../../routes/routes';
import { DisbursementInterface, DisbursementServiceConfig } from '../disbursement_service';
import { GetTransferStatusRequest, GetTransferStatusResponse } from '../../operations/get_transfer_status';
/**
 * Orange Money API Live Disbursement.
 * @class
 */
export declare class DisbursementLive implements DisbursementInterface {
    protected readonly config: DisbursementServiceConfig;
    protected readonly routes: Routes;
    /**
     * Constructs a new {Disbursement}.
     * @constructor
     * @param {DisbursementServiceConfig} config - The required global route configuration.
     */
    constructor(config: DisbursementServiceConfig);
    /**
     * Creates an access token.
     *
     * @return {Promise<CreateAccessTokenResponse>} The method response containing a string and a token.
     */
    createAccessToken(): Promise<CreateAccessTokenResponse>;
    /**
     * Transfers the specified amount of money from one account to another.
     *
     * @param {TransferRequest} params - The parameters for the transfer.
     * @return {Promise<TransferResponse>} - The response from the transfer method.
     */
    transfer(params: TransferRequest): Promise<TransferResponse>;
    /**
     * Retrieves the status of a transfer.
     *
     * @param {GetTransferStatusRequest} params - The parameters for retrieving the transfer status.
     * @return {Promise<GetTransferStatusResponse>} - The method response containing the status and transfer status response.
     */
    getTransferStatus(params: GetTransferStatusRequest): Promise<GetTransferStatusResponse>;
}
//# sourceMappingURL=live.d.ts.map